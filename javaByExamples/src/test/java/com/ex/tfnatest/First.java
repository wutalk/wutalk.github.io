package com.ex.tfnatest;

import org.junit.Test;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertTrue;

public class First {

    public int lengthOfLIS(int[] nums) {

        int max = 1;
        for (int i = 0; i < nums.length; i++) {
            int t = nums[i];
            int len = 1;
            for (int j = i + 1; j < nums.length; j++) {
                if (nums[j] >= t) {
                    len++;
                    t = nums[j];
                }
            }
            if (len > max) {
                max = len;
            }
        }

        return max;
    }

    @Test
    public void test() {

        int[] input = new int[]{10, 9, 2, 5, 3, 7, 101, 18};

        assertEquals(4, lengthOfLIS(input));

        assertEquals(6, lengthOfLIS(new int[]{10, 9, 2, 5, 3, 7, 101, 18, 300, 222, 303}));
        assertEquals(7, lengthOfLIS(new int[]{10, 9, 2, 5, 5, 3, 7, 101, 18, 300, 222, 303}));

        assertEquals(7, lengthOfLIS(new int[]{10, 9, 2, 5, 5, 3, 7, 101, 18, 300, 222, 19, 28, 303}));

        assertEquals(42, lengthOfLIS(new int[]{497, 979, 348, 278, 132, 711, 832, 166, 190, 224, 976, 203, 567, 617, 590, 435, 981, 728, 582, 929, 337, 410, 489, 874, 1000, 334, 627, 42, 836, 544, 389, 246, 483, 169, 696, 350, 941, 104, 460, 927, 409, 147, 888, 335, 518, 508, 35, 591, 904, 694, 259, 18, 284, 2, 309, 214, 815, 454, 504, 699, 155, 463, 410, 766, 772, 178, 689, 855, 825, 939, 860, 226, 924, 366, 482, 803, 647, 890, 303, 848, 234, 489, 81, 48, 7, 199, 478, 663, 854, 529, 70, 27, 53, 786, 647, 705, 649, 424, 606, 553, 194, 328, 258, 487, 557, 30, 60, 699, 41, 552, 274, 531, 861, 543, 31, 93, 241, 320, 749, 677, 279, 581, 503, 972, 721, 995, 219, 247, 485, 19, 419, 801, 767, 433, 306, 717, 748, 142, 20, 406, 498, 362, 309, 628, 245, 988, 581, 207, 866, 184, 498, 898, 962, 272, 459, 438, 473, 272, 740, 272, 130, 912, 726, 148, 281, 765, 702, 671, 305, 791, 799, 820, 768, 10, 319, 519, 865, 850, 528, 939, 282, 626, 521, 80, 123, 657, 534, 89, 599, 572, 66, 596, 828, 461, 196, 752, 16, 636, 404, 954, 884, 940, 406, 133, 617, 381, 204, 18, 176, 161, 335, 645, 608, 612, 610, 221, 131, 553, 606, 393, 232, 180, 714, 379, 170, 613, 190, 876, 452, 595, 762, 987, 334, 742, 244, 957, 782, 369, 561, 923, 255, 64, 750, 498, 424, 510, 759, 783, 341, 972, 579, 860, 258, 127, 782, 397, 670, 17, 28, 540, 829, 413, 755, 580, 308, 188, 595, 958, 336, 647, 128, 739, 872, 651, 1000, 52, 124, 281, 254, 100, 741, 387, 237, 654, 90, 894, 694, 200, 506, 400, 645, 184, 207, 915, 324, 26, 316, 219, 913, 579, 637, 46, 710, 659, 796, 179, 478, 748, 359, 101, 352, 761, 135, 309, 785, 370, 122, 571, 446, 241, 894, 323, 280, 294, 469, 748, 916, 592, 26, 352, 250, 43, 63, 159, 434, 833, 127, 514, 978, 602, 771, 25, 972, 760, 903, 443, 74, 771, 280, 494, 647, 92, 481, 953, 762, 424, 430, 460, 247, 952, 290, 751, 632, 928, 656, 561, 332, 666, 717, 346, 36, 782, 611, 28, 475, 170, 449, 486, 265, 547, 575, 89, 177, 824, 308, 287, 387, 666, 746, 992, 466, 799, 583, 519, 453, 769, 579, 373, 377, 410, 479, 712, 75, 403, 757, 951, 837, 810, 546, 326, 886, 411, 849, 323, 371, 72, 191, 489, 619, 340, 713, 34, 341, 461, 632, 493, 161, 632, 973, 298, 649, 409, 733, 51, 400, 467, 727, 1, 648, 856, 629, 473, 153, 115, 512, 729, 204, 398, 650, 794, 483, 360, 487, 995, 211, 720, 815, 406, 834, 803, 727, 240, 429, 167, 771, 797, 68, 909, 136, 707, 673, 678, 736, 116, 689, 331, 45, 326, 385, 572, 669, 619, 464, 966, 897, 41, 729, 572, 312, 457, 240, 182, 756, 624, 350, 332, 781, 1000, 439, 881, 584, 134, 943, 295, 137, 789, 651, 447, 603, 871, 188, 213, 747, 71, 893, 397, 890, 855, 241, 26, 919, 279, 488, 381, 257, 658, 918, 48, 674, 959, 529, 240, 34, 118, 763, 300, 675, 413, 747}));

        assertTrue(1 == 1);
    }
}
